;;; Automatically generated on Sun Nov 26 17:27:02 2017
;;; Invoked by yu@yu using 24.4.1
(setq-default kill-ring '(#("
" 0 1 (fontified t)) #("
" 0 1 (fontified nil org-category #("Lists" 0 5 ...) org-category-position 402)) #("        
" 0 9 (fontified t org-category #("Lists" 0 5 ...) org-category-position 402)) #("
" 0 1 (fontified t org-category #("Lists" 0 5 ...) org-category-position 402)) #("     - State \"WAITING\"    from \"\"           [2017-11-21 Tue 19:41]
" 0 5 (fontified t) 5 7 (fontified t) 7 14 (fontified t) 14 21 (fontified t) 21 44 (fontified t) 44 65 (face org-date keymap #1=... mouse-face highlight org-no-flyspell t fontified t) 65 66 (face org-date rear-nonsticky ... keymap #1# mouse-face highlight org-no-flyspell t fontified t) 66 67 (org-category-position 402 org-category #("Lists" 0 5 ...) fontified t)) #("修改PRB报告" 0 7 (fontified t org-category #("Lists" 0 5 ...) org-category-position 402 face org-level-4 :org-clock-minutes 257)) "htpp://pan.baidu/s/1sjCATFv" #("    :LOGBOOK:  
    CLOCK: [2017-11-21 Tue 16:17]--[2017-11-21 Tue 16:50] =>  0:33
    :END:      
" 0 2 (face org-special-keyword fontified t org-category #2=#("Lists" 0 5 ...) org-category-position 402 org-effort #1="0:10") 2 4 (face org-special-keyword fontified t org-category #2# org-category-position 402 org-effort #1#) 4 5 (face org-special-keyword fontified t) 5 6 (face org-special-keyword fontified t) 6 7 (face org-special-keyword fontified t) 7 12 (face org-special-keyword fontified t) 12 13 (face org-special-keyword fontified t) 13 14 (face org-special-keyword fontified t) 14 15 (face org-special-keyword fontified t) 15 16 (fontified t) 16 20 (fontified nil) 20 26 (face org-special-keyword fontified nil) 26 27 (fontified nil) 27 48 (face org-date keymap #3=... mouse-face highlight org-no-flyspell t fontified nil) 48 49 (face org-date rear-nonsticky ... keymap #3# mouse-face highlight org-no-flyspell t fontified nil) 49 51 (fontified nil) 51 73 (fontified nil) 73 77 (fontified nil) 77 82 (fontified nil) 82 83 (fontified nil) 83 87 (face org-special-keyword fontified t) 87 92 (face org-special-keyword fontified t) 92 98 (fontified t) 98 99 (fontified t)) #("    :LOGBOOK:  
    CLOCK: [2017-11-21 Tue 15:43]--[2017-11-21 Tue 15:49] =>  0:06
    :END:      
" 0 2 (face org-special-keyword fontified t org-category #2=#("Lists" 0 5 ...) org-category-position 402 org-effort #1="0:10") 2 4 (face org-special-keyword fontified t org-category #2# org-category-position 402 org-effort #1#) 4 5 (face org-special-keyword fontified t) 5 6 (face org-special-keyword fontified t) 6 7 (face org-special-keyword fontified t) 7 12 (face org-special-keyword fontified t) 12 13 (face org-special-keyword fontified t) 13 14 (face org-special-keyword fontified t) 14 15 (face org-special-keyword fontified t) 15 16 (fontified t) 16 20 (fontified nil) 20 26 (face org-special-keyword fontified nil) 26 27 (fontified nil) 27 48 (face org-date keymap #3=... mouse-face highlight org-no-flyspell t fontified nil) 48 49 (face org-date rear-nonsticky ... keymap #3# mouse-face highlight org-no-flyspell t fontified nil) 49 51 (fontified nil) 51 73 (fontified nil) 73 77 (fontified nil) 77 82 (fontified nil) 82 83 (fontified nil) 83 87 (face org-special-keyword fontified t) 87 92 (face org-special-keyword fontified t) 92 98 (fontified t) 98 99 (fontified t)) "    :LOGBOOK:  
    CLOCK: [2017-11-21 Tue 11:06]--[2017-11-21 Tue 11:14] =>  0:08
    :END:      
"))
(setq-default session-file-alist '(("~/org/gtd/gtd.org" 402 4111 1 nil nil 46451 (overwrite-mode)) ("~/org/gtd/datetree.org" 609949 608677 1 nil nil 610259 (overwrite-mode)) ("~/.emacs.d/init.el" 1 2572 1 nil nil 5511 (overwrite-mode)) ("~/org/datetree.org" 105 nil 1 nil nil 483 (overwrite-mode)) ("~/org/gtd.org" 613 30915 1 nil nil 829 (overwrite-mode)) ("~/org/knowledge/writing/report13/PRB.tex" 1104 1073 1 nil nil 5746 (overwrite-mode)) ("~/working/29/P-R-B/OpenFoam/Re10Ra10000/L=20/postProcessing/probes/0/T.csv" 579990 19 1 nil nil 579990 (overwrite-mode)) ("~/working/29/P-R-B/OpenFoam/Re10Ra10000/4/postProcessing/probes/0/T.csv" 539988 15 1 nil nil 539988 (overwrite-mode)) ("~/working/Preconditioning/lid-driven/PyFR-ac/output/export.sh" 68 67 1 nil nil 1348 (overwrite-mode)) ("~/working/29/Poiseuille/pyfr/poi1/poi.ini" 465 nil 1 nil nil 474 (overwrite-mode)) ("~/CFD/dolfyn-cfd_0.527/src/Makefile" 84 84 1 nil nil 84 (overwrite-mode)) ("~/working/29/P-R-B/pyfr/1/poi.ini" 285 290 1 nil nil 1162 (overwrite-mode)) ("~/org/knowlege.org" 174809 173069 1 nil nil 174809 (overwrite-mode)) ("~/.emacs.d/elpa/hexo-20170702.1915/hexo-autoloads.el" 1621 nil 1 nil nil 1621 (overwrite-mode)) ("~/.emacs.d/elpa/blog-admin-20170430.721/blog-admin-autoloads.el" 395 nil 1 nil nil 395 (overwrite-mode)) ("~/.emacs.d/elpa/ctable-20140304.1659/ctable-autoloads.el" 226 nil 1 nil nil 226 (overwrite-mode)) ("~/.emacs.d/elpa/names-20151201.404/names-autoloads.el" 3528 nil 1 nil nil 3528 (overwrite-mode)) ("~/test.org" 33 nil 1 nil nil 33 (overwrite-mode)) ("~/org/knowledge/literature/papers.org" 264 264 1 nil nil 88838 (overwrite-mode)) ("~/org/knowledge/writing/Articles/1/paper.tex" 2265 2244 1 nil nil 2264 (overwrite-mode)) ("~/org/gtd.org_archive" 1181 1181 1 nil nil 1181 (overwrite-mode)) ("~/.emacs.d/lisp/init-elpa.el" 1 168 1 nil nil 168 (overwrite-mode)) ("~/.emacs.d/lisp/init-auctex.el" 927 1 1 nil nil 927 (overwrite-mode)) ("~/org/knowledge/writing/bib/test.org" 131 1 1 nil nil 195 (overwrite-mode)) ("~/.emacs.d/elpa/org-20170731/org-loaddefs.el" 101845 nil 1 nil nil 101845 (overwrite-mode)) ("~/.emacs.d/elpa/org-20170731/org-autoloads.el" 27318 nil 1 nil nil 27318 (overwrite-mode))))
(setq-default file-name-history '("/home/yu/org/gtd/gtd.org" "~/org/gtd/datetree.org" "~/org/gtd/knowlege.org" "~/.emacs.d/init.el" "/home/yu/org/gtd/knowlege.org" "~/org/datetree.org" "/home/yu/org/gtd/datetree.org" "~/org/knowledge/literature/papers.org" "~/org/gtd.org" "~/org/knowlege.org" "~/testRe/1/1" "/home/yu/org/gtd.org" "~/prb/postProcessing/probes/0/T" "~/CFD/nektar++-4.4.1/cmake/ThirdPartyLoki.cmake" "~/CFD/nektar++-4.1.0/CMakeLists.txt" "~/OpenFOAM/yu-4.1/swak4Foam/Examples/solvePDE/flangeWithPDE/customRegexp" "~/OpenFOAM/yu-4.1/swak4Foam/Documentation/swak4FoamReference.org" "/home/yu/org/knowledge/writing/report13/PRB.tex" "~/ThirdParty-4.1/README.org" "~/working/29/P-R-B/OpenFoam/Re10Ra10000/L=20/postProcessing/probes/0/T.csv" "~/working/29/P-R-B/OpenFoam/Re10Ra10000/4/postProcessing/probes/0/T.csv" "~/OpenFOAM-4.x/etc/README.org" "~/OpenFOAM-4.x/etc/thermoData/therm.dat" "~/OpenFOAM-4.x/etc/codeTemplates/foamCommentStyles" "~/working/Preconditioning/lid-driven/PyFR-ac/output/export.sh" "~/working/29/R-B/PyFR/h/2/output/solution.vtk" "~/working/29/R-B Flow/PyFR/v_a=2/rb_2d.ini" "~/working/29/Poiseuille/pyfr/poi1/poi.ini"))
(setq-default LaTeX-environment-history '("figure" "equation" "itemize" "NOB假设" "alertblock" "verbatim" "center" "frame" "i" "small" "columns" "exampleblock" "quote" "bmatrix" "align" "table" "tabular" "eequa" "aligh" "euqtion" "gather" "section" "document" "option"))
(setq-default TeX-macro-history '("section"))
(setq-default buffer-name-history '("*shell*" "*shell*<2>" "*shell*<6>" "*shell*<5>" "*shell*<4>" "*shell*<3>"))
(setq-default command-history '((find-file "/home/yu/org/gtd/gtd.org") (find-file "/home/yu/org/gtd/knowlege.org") (find-file "/home/yu/org/gtd/datetree.org") (find-file "~/org/gtd.org" t) (find-file "/home/yu/org/gtd.org") (find-file "/home/yu/org/knowledge/writing/report13/PRB.tex") (package-list-packages nil) (shell nil) (color-theme-sanityinc-solarized-light) (color-theme-sanityinc-tomorrow-day) (org-capture nil) (eshell nil) (org-export-stack) (org-clock-display) (find-file "/home/yu/HiFiLES-solver/bin/elf_section") (ediff #("/home/yu/HiFiLES-solver/src/inters.cpp" 9 24 ... 24 27 ...) #("/home/yu/HiFiLES-solver-orgin/src/inters.cpp" 30 34 ...)) (gdb "gdb -i=mi ") (eshell (quote \.\.\.)) (find-file "/home/yu/HiFiLES-solver/README.md") (imaxima) (color-theme-sanityinc-tomorrow-bright) (color-theme-sanityinc-tomorrow-blue) (color-theme-sanityinc-solarized-dark) (color-theme-sanityinc-tomorrow-eighties) (find-file "/home/yu/test.org") (org-version nil) (org-version nil t t) (load-file #("/home/yu/.emacs.d/init.el" 9 17 ...)) (eval-buffer) (ibuffer-find-file "/home/yu/org/knowlege.org" t) (find-file "/home/yu/org/knowledge/writing/Articles/1/paper.tex")))
(setq-default gud-gdb-history '("gdb -i=mi "))
(setq-default gud-gud-gdb-history '("gdb --fullname "))
(setq-default helm-ff-history '("/home/yu/org/"))
(setq-default helm-source-complex-command-history '((name . "Complex Command History") (candidates closure (t) nil (let* \.\.\. \.\.\. \.\.\.)) (keymap keymap \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. keymap \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\.) (action ("Eval" closure \.\.\. \.\.\. \.\.\. \.\.\. \.\.\.) ("Edit and eval" closure \.\.\. \.\.\. \.\.\.)) (persistent-action . helm-sexp-eval) (multiline) (filtered-candidate-transformer helm-fuzzy-highlight-matches) (match helm-mm-exact-match helm-mm-match) (redisplay . identity) (header-line . "C-j: helm-sexp-eval (keeping session)") (multimatch) (group . helm)))
(setq-default helm-source-file-name-history '((name . "File Name History") (candidates . file-name-history) (keymap keymap \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. keymap \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\.) (action . helm-type-file-actions) (persistent-action . ignore) (filtered-candidate-transformer helm-file-name-history-transformer helm-fuzzy-highlight-matches) (match helm-mm-exact-match helm-mm-match) (redisplay . identity) (header-line . "C-j: ignore (keeping session)") (multimatch) (group . helm)))
(setq-default hi-lock-face-history '("hi-yellow" "hi-pink" "hi-green" "hi-blue" "hi-black-b" "hi-blue-b" "hi-red-b" "hi-green-b" "hi-black-hb"))
(setq-default ido-file-history '("gtd.org" "knowlege.org" "datetree.org" nil "PRB.tex" "elf_section" "inters.cpp" "README.md" "test.org" "init.el" "paper.tex" "Makfile" "gtd.org_archive" "." "papers.org" "init-auctex.el" "ams-sample.tex" "test.tex" "report12.org" "report12.tex" "report11.org" "ctex.tex" "report12" "grid2.png" "report.org" "report11" ".Xauthority" "boundFace.cpp" "report10" "test1.org"))
(setq-default minibuffer-history '("-10" "+30" "sec:" "subsection" "流线图" "package-list-packages" "深度学习" "命令" "linux" "2:00" "30" "-5" "+5" "shell" "achieve" "+20" "+10" "+1:0" "color-theme-sanityinc-solarized-light" "color-theme-sanityinc-tomorrow-day" "how-to-solve-pyopencl-clgetpaltformids-failed" "http://blog.linux4us.org/2015/05/30/how-to-solve-pyopencl-clgetplatformids-failed/" "-20" "+40" "org-capture" "eshell" "+27" "3=" "org-export-stack" "org-clock-display"))
(setq-default occur-collect-regexp-history '("\\1"))
(setq-default org-agenda-search-history '("交流"))
(setq-default org-insert-link-history '("http://blog.linux4us.org/2015/05/30/how-to-solve-pyopencl-clgetplatformids-failed/" "doi:10.1007/BF02811644"))
(setq-default org-read-date-history '("   " "18:00    " "9:00    " "y    " "q    " "@    " "8:00    " "12:00-14:30    " "9:30-10:30    " "量纲    "))
(setq-default org-tags-history '("meme" "output" "input" "演化" "w" "社交" "交流" ":生活:个人:总结" "生活" ":生活:个人:休息" ":生活:个人" ":科研:个人:投稿" ":科研:个人" "科研" ":科研:导师:交流" ":科研:导师" ":科研:个人:会议:摘要" ":科研:个人:PRB:编程" ":科研:个人:PRB" ":科研:个人:PRB:整理:" ":科研:个人:整理" ":科研:同事:学术交流" ":科研:同事" ":管理:阿基里斯" "管理" ":科研:个人:会议" ":生活:个人:状态" ":学习:个人:博客" ":学习:个人" "学习"))
(setq-default query-replace-history '("$\\mathrm{v}_{\\mathrm{max}}$" "$v_{max}$" "$\\mathrm{u}_{\\mathrm{max}}$" "$u_{max}$" "$\\overline{\\mathrm{Nu}}$" "$\\overline{Nu}$" "$\\mathrm{Nu}_{\\mathrm{min}}$" "$Nu_{min}$" "$\\mathrm{Nu}_{\\mathrm{max}}$" "$Nu_{max}$" "\\textbf{S}" "S" "flurry" "" "FR-LES" "Flurry" "STARTED" "HOLD"))
(setq-default serial-name-history '("/dev/ttyS0"))
(setq-default serial-speed-history '("9600" "1200" "2400" "4800" "14400" "19200" "28800" "38400" "57600" "115200"))
(setq-default smex-history '(package-list-packages shell color-theme-sanityinc-solarized-light color-theme-sanityinc-tomorrow-day org-capture eshell org-export-stack))
(setq-default table-capture-columns-history '(""))
(setq-default table-capture-justify-history '("left"))
(setq-default table-capture-min-cell-width-history '("5"))
(setq-default table-cell-height-history '("1"))
(setq-default table-cell-span-direction-history '("right"))
(setq-default table-cell-split-contents-to-history '("split"))
(setq-default table-cell-split-orientation-history '("horizontally"))
(setq-default table-cell-width-history '("5"))
(setq-default table-col-delim-regexp-history '(""))
(setq-default table-columns-history '("3"))
(setq-default table-insert-row-column-history '("row"))
(setq-default table-justify-history '("center"))
(setq-default table-row-delim-regexp-history '(""))
(setq-default table-rows-history '("3"))
(setq-default table-sequence-count-history '("0"))
(setq-default table-sequence-increment-history '("1"))
(setq-default table-sequence-interval-history '("1"))
(setq-default table-sequence-justify-history '("left"))
(setq-default table-sequence-string-history '("0"))
(setq-default table-source-caption-history '("Table"))
(setq-default table-source-language-history '("html"))
(setq-default table-target-history '("cell"))
(setq-default w3m-input-url-history '("http://ws.isiknowledge.com/cps/openurl/service?url_ver=Z39.88-2004&rft_id=info%3Adoi%2F10.1016/j.cam.2014.01.007&svc_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Asch_svc&svc.citing=yes" "https://doi.org/10.1016/j.cam.2014.01.007" "http://linkinghub.elsevier.com/retrieve/pii/S0377042714000211" "http://linkinghub.elsevier.com/retrieve/pii/S0377042714000211.full.pdf" "http://ws.isiknowledge.com/cps/openurl/service?url_ver=Z39.88-2004&rft_id=info:doi/10.1016/j.cam.2014.01.007"))
