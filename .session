;;; Automatically generated on Fri Aug  4 21:01:35 2017
;;; Invoked by yu@yu using 24.4.1
(setq-default session-file-alist '(("~/.emacs.d/init.el" 7379 2572 1 nil nil 7379 (overwrite-mode)) ("~/.emacs.d/lisp/init-elpa.el" 1 168 1 nil nil 168 (overwrite-mode)) ("~/.emacs.d/lisp/init-auctex.el" 927 1 1 nil nil 927 (overwrite-mode)) ("~/org/gtd.org" 57465 200280 1 nil nil 208018 (overwrite-mode)) ("~/org/knowledge/writing/bib/test.org" 131 1 1 nil nil 195 (overwrite-mode)) ("~/.emacs.d/elpa/org-20170731/org-loaddefs.el" 101845 nil 1 nil nil 101845 (overwrite-mode)) ("~/.emacs.d/elpa/org-20170731/org-autoloads.el" 27318 nil 1 nil nil 27318 (overwrite-mode))))
(setq-default file-name-history '("/home/yu/.emacs.d/init.el" "~/.emacs.d/lisp/init-elpa.el" "~/.emacs.d/lisp/init-bbdb.el" "/home/yu/.emacs.d/lisp/init-auctex.el" "~/.emacs.d/company-statistics-cache.el" "~/.emacs.d/recentf" "~/org/gtd.org" "~/org/knowledge/writing/Articles/1/ams-sample.tex" "~/org/datetree.org" "~/org/knowledge/writing/report11/report11.org" "~/org/knowledge/writing/bib/test.tex" "~/org/knowledge/writing/bib/test.org" "~/.emacs.d/elpa/org-20170731/org-loaddefs.el" "~/.emacs.d/elpa/org-20170731/org-autoloads.el" "~/org/knowledge/writing/bib/research.bib" "~/.emacs.d/elpa/org-ref-20170727.1217/org-ref-autoloads.el" "~/.emacs.d/elpa/helm-bibtex-20170801.157/helm-bibtex-autoloads.el" "~/.emacs.d/elpa/helm-20170802.2347/helm-autoloads.el" "~/.emacs.d/elpa/helm-core-20170727.1245/helm-core-autoloads.el" "~/.emacs.d/elpa/async-20170803.1153/async-autoloads.el" "~/.emacs.d/elpa/parsebib-20170501.347/parsebib-autoloads.el" "~/.emacs.d/elpa/biblio-20161014.1604/biblio-autoloads.el" "~/.emacs.d/elpa/biblio-core-20160901.1115/biblio-core-autoloads.el" "~/.emacs.d/elpa/seq-2.20/seq-autoloads.el" "~/.emacs.d/elpa/key-chord-20160227.438/key-chord-autoloads.el" "~/.emacs.d/elpa/pdf-tools-20170721.718/pdf-tools-autoloads.el" "~/.emacs.d/elpa/tablist-20170219.1935/tablist-autoloads.el" "~/.emacs.d/elpa/let-alist-1.0.5/let-alist-autoloads.el" "~/org/knowledge/writing/Articles/1/paper.tex" "~/org/knowledge/writing/report11/report11.tex"))
(setq-default LaTeX-environment-history '("figure" "equation" "itemize" "NOB假设" "alertblock" "verbatim" "center" "frame" "i" "small" "columns" "exampleblock" "quote" "bmatrix" "align" "table" "tabular" "eequa" "aligh" "euqtion" "gather" "section" "document" "option"))
(setq-default TeX-macro-history '("section"))
(setq-default buffer-name-history '("*shell*" "*shell*<2>" "*shell*<6>" "*shell*<5>" "*shell*<4>" "*shell*<3>"))
(setq-default command-history '((color-theme-sanityinc-solarized-light) (color-theme-sanityinc-tomorrow-day) (find-file "/home/yu/.emacs.d/init.el") (dired "/home/yu/.emacs.d/lisp/") (find-file "/home/yu/.emacs.d/lisp/init-auctex.el") (package-list-packages nil) (dired "/home/yu/org/" nil) (whitespace-mode (quote toggle)) (writeroom-mode (quote toggle)) (find-file "/home/yu/org/knowledge/writing/Articles/1/ams-sample.tex") (find-file "/home/yu/org/gtd.org") (find-file "/home/yu/org/knowledge/writing/bib/test.org") (org-ref) (find-file #("/home/yu/org/knowledge/writing/bib/test.org" 31 33 ...)) (helm-find-files nil) (helm-buffers-list) (find-file "/home/yu/org/knowlege.org") (org-attach-attach "/home/yu/org/knowlege.org" nil) (org-babel-do-key-sequence-in-edit-buffer "") (capitalize-word 1) (dired "/home/yu/RB Flow/" nil) (find-file "/home/yu/org/knowledge/writing/report12/test.tex") (find-file "/home/yu/org/knowledge/writing/report12/report12.org") (find-file "/home/yu/test.tex") (eshell nil) (exec-path-from-shell-initialize) (find-file "/home/yu/org/knowledge/writing/report12/report12.tex") (find-file "/home/yu/org/knowledge/writing/report11/report11.org") (find-file "/home/yu/ctex.tex") (find-file "/home/yu/org/ctex.tex") (find-file "/home/yu/org/knowledge/writing/report12/knowlege.org")))
(setq-default gud-gdb-history '("gdb -i=mi "))
(setq-default gud-gud-gdb-history '("gdb --fullname "))
(setq-default helm-ff-history '("/home/yu/org/"))
(setq-default helm-source-complex-command-history '((name . "Complex Command History") (candidates closure (t) nil (let* \.\.\. \.\.\. \.\.\.)) (keymap keymap \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. keymap \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\.) (action ("Eval" closure \.\.\. \.\.\. \.\.\. \.\.\. \.\.\.) ("Edit and eval" closure \.\.\. \.\.\. \.\.\.)) (persistent-action . helm-sexp-eval) (multiline) (filtered-candidate-transformer helm-fuzzy-highlight-matches) (match helm-mm-exact-match helm-mm-match) (redisplay . identity) (header-line . "C-j: helm-sexp-eval (keeping session)") (multimatch) (group . helm)))
(setq-default helm-source-file-name-history '((name . "File Name History") (candidates . file-name-history) (keymap keymap \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. keymap \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\. \.\.\.) (action . helm-type-file-actions) (persistent-action . ignore) (filtered-candidate-transformer helm-file-name-history-transformer helm-fuzzy-highlight-matches) (match helm-mm-exact-match helm-mm-match) (redisplay . identity) (header-line . "C-j: ignore (keeping session)") (multimatch) (group . helm)))
(setq-default hi-lock-face-history '("hi-yellow" "hi-pink" "hi-green" "hi-blue" "hi-black-b" "hi-blue-b" "hi-red-b" "hi-green-b" "hi-black-hb"))
(setq-default ido-file-history '("init.el" "." "init-auctex.el" "ams-sample.tex" "gtd.org" "test.org" "knowlege.org" "test.tex" "report12.org" "report12.tex" "report11.org" "ctex.tex" "report12" nil "grid2.png" "report.org" "report11" ".Xauthority" "boundFace.cpp" "datetree.org" "report10" "test1.org" "boundFace.hpp" "input" "solver.cpp" "flux.hpp" "solver.hpp" "frles.cpp" "README.org" "README.md"))
(setq-default minibuffer-history '("color-theme-sanityinc-solarized-light" "color-theme-sanityinc-tomorrow-day"))
(setq-default occur-collect-regexp-history '("\\1"))
(setq-default org-insert-link-history '("doi:10.1007/BF02811644"))
(setq-default org-read-date-history '("   " "y    " "q    " "@    " "8:00    " "12:00-14:30    " "9:30-10:30    " "量纲    "))
(setq-default org-tags-history '("month" "出差" "restart:" "restart" "CFD" "emacs" "Emacs" "Flurry" "CPP" "HPC" "VI" "Emacs:" "交流" "FRLES" "FR" "git" ":Flurry:" "CPP:" "C++" "Ubuntu" "C/C++" "reading" "study" "study:" ":life:" "life" "research:" "research" "future"))
(setq-default query-replace-history '("$\\mathrm{v}_{\\mathrm{max}}$" "$v_{max}$" "$\\mathrm{u}_{\\mathrm{max}}$" "$u_{max}$" "$\\overline{\\mathrm{Nu}}$" "$\\overline{Nu}$" "$\\mathrm{Nu}_{\\mathrm{min}}$" "$Nu_{min}$" "$\\mathrm{Nu}_{\\mathrm{max}}$" "$Nu_{max}$" "\\textbf{S}" "S" "flurry" "" "FR-LES" "Flurry" "STARTED" "HOLD"))
(setq-default serial-name-history '("/dev/ttyS0"))
(setq-default serial-speed-history '("9600" "1200" "2400" "4800" "14400" "19200" "28800" "38400" "57600" "115200"))
(setq-default smex-history '(color-theme-sanityinc-solarized-light color-theme-sanityinc-tomorrow-day package-list-packages dired whitespace-mode writeroom-mode package-install))
(setq-default table-capture-columns-history '(""))
(setq-default table-capture-justify-history '("left"))
(setq-default table-capture-min-cell-width-history '("5"))
(setq-default table-cell-height-history '("1"))
(setq-default table-cell-span-direction-history '("right"))
(setq-default table-cell-split-contents-to-history '("split"))
(setq-default table-cell-split-orientation-history '("horizontally"))
(setq-default table-cell-width-history '("5"))
(setq-default table-col-delim-regexp-history '(""))
(setq-default table-columns-history '("3"))
(setq-default table-insert-row-column-history '("row"))
(setq-default table-justify-history '("center"))
(setq-default table-row-delim-regexp-history '(""))
(setq-default table-rows-history '("3"))
(setq-default table-sequence-count-history '("0"))
(setq-default table-sequence-increment-history '("1"))
(setq-default table-sequence-interval-history '("1"))
(setq-default table-sequence-justify-history '("left"))
(setq-default table-sequence-string-history '("0"))
(setq-default table-source-caption-history '("Table"))
(setq-default table-source-language-history '("html"))
(setq-default table-target-history '("cell"))
